common:
  cluster: cluster-1
# demo:
#   manageAddonNamespace: true
glooAgent:
  enabled: true
  relay:
    serverAddress: gloo-mesh-mgmt-server.gloo-mesh:9900
glooMgmtServer:
  serviceType: ClusterIP
  registerCluster: true
  enabled: true
  createGlobalWorkspace: true
glooUi:
  enabled: true
istioInstallations:
    enabled: true
    northSouthGateways:
      - enabled: true
        installations:
          - gatewayRevision: auto
            istioOperatorSpec:
              components:
                ingressGateways:
                  - name: istio-ingressgateway
                    namespace: gloo-mesh-gateways
                    enabled: true
                    label:
                      istio: ingressgateway
                    k8s:
                      overlays:
                      - kind: Deployment
                        name: istio-ingressgateway-1-17-2
                        patches:
                        - path: spec.template.spec.volumes.[-1]
                          value:
                            configMap:
                              name: gloo-mesh-custom-envoy-bootstrap
                              defaultMode: 420
                              optional: false
                            name: custom-bootstrap-volume
                        - path: spec.template.spec.containers.[name:istio-proxy].volumeMounts.[-1]
                          value:
                            mountPath: /etc/istio/custom-bootstrap
                            name: custom-bootstrap-volume
                            readOnly: true
                        - path: spec.template.spec.containers.[name:istio-proxy].env.[-1]
                          value:
                            name: ISTIO_BOOTSTRAP_OVERRIDE
                            value: /etc/istio/custom-bootstrap/custom_bootstrap.json
        name: istio-ingressgateway
telemetryCollector:
  enabled: true
  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  config:
    exporters:
      otlp:
        endpoint: gloo-telemetry-gateway.gloo-mesh:4317
prometheus:
  enabled: true
redis:
  deployment:
    enabled: true
legacyMetricsPipeline:
  enabled: false
telemetryGateway:
  enabled: true
  resources:
    limits:
      cpu: 600m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 1Gi
extAuthService:
  enabled: true
  extAuth:
    apiKeyStorage:
      # Use the local gloo-mesh-addons Redis for backing storage
      name: redis
      enabled: true
      config:
        host: "redis.gloo-mesh:6379"
        # Set to 0 to match the default database for the 'glooPortalServer.apiKeyStorage' configuration
        db: 0
      # Replace with a random string to use to generate hash values for other keys
      secretKey: "ThisIsSecret"
glooPortalServer:
  enabled: true
  apiKeyStorage:
    # Use the local gloo-mesh-addons Redis for backing storage
    redis:
      enabled: true
      address: redis.gloo-mesh:6379
    # Path for API key storage config file in the gloo-mesh-addons backing Redis
    configPath: /etc/redis-client-config/config.yaml
    # Replace with a random string to use to generate hash values for other keys
    secretKey: "ThisIsSecret"
rateLimiter:
  enabled: true